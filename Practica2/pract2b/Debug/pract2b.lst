
pract2b.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  0c000000  0c000000  00008000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .bss          00000028  0c000020  0c000020  00008020  2**0
                  ALLOC
  2 .text         00000080  0c000048  0c000048  00008048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM.attributes 00000022  00000000  00000000  000080c8  2**0
                  CONTENTS, READONLY
  4 .debug_line   00000059  00000000  00000000  000080ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000075  00000000  00000000  00008143  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000014  00000000  00000000  000081b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000020  00000000  00000000  000081d0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0c000048 <start>:
max: 	.space 4
ind: 	.space 4

.text
start:
		mov r11,#0
 c000048:	e3a0b000 	mov	fp, #0
		mov r0,#0		//j=0
 c00004c:	e3a00000 	mov	r0, #0

0c000050 <for_j>:
for_j:	cmp r0,#N		//j<N
 c000050:	e3500008 	cmp	r0, #8
		bge fin_j
 c000054:	aa000016 	bge	c0000b4 <fin_j>
		ldr r1,=max		// Leo la dir. de max
 c000058:	e59f1058 	ldr	r1, [pc, #88]	; c0000b8 <fin_j+0x4>
		str r11,[r1]		// Escribo 0 en max
 c00005c:	e581b000 	str	fp, [r1]
		mov r6,#0		//i=0
 c000060:	e3a06000 	mov	r6, #0

0c000064 <for_i>:
for_i: 	cmp r2,#N		//i<N
 c000064:	e3520008 	cmp	r2, #8
		bge fin_i
 c000068:	aa000009 	bge	c000094 <fin_i>
		ldr r2,=A		//cargo la primera dirreccion del array
 c00006c:	e59f2048 	ldr	r2, [pc, #72]	; c0000bc <fin_j+0x8>
		ldr r3,[r2,r6,LSL#2]//leo el elemento del array y lo guardo en r3
 c000070:	e7923106 	ldr	r3, [r2, r6, lsl #2]
		ldr r4,[r1]		//cargo el contenido de max
 c000074:	e5914000 	ldr	r4, [r1]

0c000078 <if>:
if: 	cmp r4,r3		//los cambio el orden
 c000078:	e1540003 	cmp	r4, r3
		bge fin_if
 c00007c:	aa000002 	bge	c00008c <fin_if>
		str r3,[r1]		//guardo el valor del array en max
 c000080:	e5813000 	str	r3, [r1]
		ldr r5,=ind		//leo la dir de ind
 c000084:	e59f5034 	ldr	r5, [pc, #52]	; c0000c0 <fin_j+0xc>
		str r6,[r5]		//ind=i
 c000088:	e5856000 	str	r6, [r5]

0c00008c <fin_if>:
fin_if:	add r6,r6,#1	//i++
 c00008c:	e2866001 	add	r6, r6, #1
		b for_i
 c000090:	eafffff3 	b	c000064 <for_i>

0c000094 <fin_i>:
fin_i:	ldr	r7,=B
 c000094:	e59f7028 	ldr	r7, [pc, #40]	; c0000c4 <fin_j+0x10>
		ldr r8,[r7,r0,LSL#2]//B[j]
 c000098:	e7978100 	ldr	r8, [r7, r0, lsl #2]
		ldr r9,[r5]		//cargo el valor de ind
 c00009c:	e5959000 	ldr	r9, [r5]
		ldr r10,[r2,r9,LSL#2]//A[ind]
 c0000a0:	e792a109 	ldr	sl, [r2, r9, lsl #2]
		str r10,[r8]
 c0000a4:	e588a000 	str	sl, [r8]
		str r11,[r10]
 c0000a8:	e58ab000 	str	fp, [sl]
		add r0,r0,#1
 c0000ac:	e2800001 	add	r0, r0, #1
		b for_j
 c0000b0:	eaffffe6 	b	c000050 <for_j>

0c0000b4 <fin_j>:
fin_j:	b .
 c0000b4:	eafffffe 	b	c0000b4 <fin_j>
 c0000b8:	0c000040 	.word	0x0c000040
 c0000bc:	0c000000 	.word	0x0c000000
 c0000c0:	0c000044 	.word	0x0c000044
 c0000c4:	0c000020 	.word	0x0c000020
